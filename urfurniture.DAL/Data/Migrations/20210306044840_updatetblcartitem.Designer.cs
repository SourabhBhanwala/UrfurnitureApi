// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using urfurniture.DAL.Data;

namespace urfurniture.DAL.Data.Migrations
{
    [DbContext(typeof(urfurnitureContext))]
    [Migration("20210306044840_updatetblcartitem")]
    partial class updatetblcartitem
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("urfurniture.DAL.Entities.TblCartItem", b =>
                {
                    b.Property<long>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProductOptionRefId")
                        .HasColumnType("int");

                    b.Property<long>("ProductRefId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool>("SaveForLater")
                        .HasColumnType("bit");

                    b.Property<DateTime>("TimeAdded")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("UpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<long>("UserShoppingCartRefId")
                        .HasColumnType("bigint");

                    b.HasKey("CartId");

                    b.HasIndex("ProductRefId");

                    b.HasIndex("UserShoppingCartRefId");

                    b.ToTable("TblCartItems");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblCategoryImage", b =>
                {
                    b.Property<long>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryRefId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<byte[]>("UpdatedTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageId");

                    b.HasIndex("CategoryRefId");

                    b.ToTable("TblCategoryImages");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblDeliveryCharge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<byte[]>("UpdatedTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblDeliveryCharges");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblOrder", b =>
                {
                    b.Property<long>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Chargeid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("UserRefId")
                        .HasColumnType("bigint");

                    b.HasKey("OrderId");

                    b.HasIndex("UserRefId");

                    b.ToTable("TblOrders");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblOrderItemDetails", b =>
                {
                    b.Property<long>("OrderItemDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("Isactive")
                        .HasColumnType("bit");

                    b.Property<long>("OrderRefId")
                        .HasColumnType("bigint");

                    b.Property<int>("OrderStatusRefId")
                        .HasColumnType("int");

                    b.Property<bool>("PaymentStatus")
                        .HasColumnType("bit");

                    b.Property<int>("ProductOptionId")
                        .HasColumnType("int");

                    b.Property<long>("ProductRefId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<float>("TotalAmount")
                        .HasColumnType("real");

                    b.Property<byte[]>("UpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("OrderItemDetailId");

                    b.HasIndex("OrderRefId");

                    b.HasIndex("OrderStatusRefId");

                    b.HasIndex("ProductRefId");

                    b.ToTable("TblOrderItemDetails");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblOrderStatusCode", b =>
                {
                    b.Property<int>("StatusCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("OrderStatusDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("UpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("StatusCodeId");

                    b.ToTable("TblOrderStatusCodes");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblOtpConfirmation", b =>
                {
                    b.Property<int>("OtpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Otp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("UpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("OtpId");

                    b.ToTable("TblOtpConfirmations");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblProduct", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("ProdctSubCategoryRefId")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<byte[]>("UpdateTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("ProductId");

                    b.HasIndex("ProdctSubCategoryRefId");

                    b.ToTable("TblProducts");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblProductCategory", b =>
                {
                    b.Property<int>("ProdctCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("UpdatedTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("ProdctCategoryId");

                    b.ToTable("TblProductCategories");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblProductImage", b =>
                {
                    b.Property<long>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("ProductRefId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("UpdatedTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageId");

                    b.HasIndex("ProductRefId");

                    b.ToTable("TblProductImages");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblProductMetadata", b =>
                {
                    b.Property<long>("ProductMetaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Content")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("ProductRefId")
                        .HasColumnType("bigint");

                    b.HasKey("ProductMetaId");

                    b.HasIndex("ProductRefId");

                    b.ToTable("TblProductMetadatas");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblProductOption", b =>
                {
                    b.Property<int>("ProductOptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("OptionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OptionPriceIncrement")
                        .HasColumnType("int");

                    b.Property<long>("ProductRefId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("UpdatedTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("ProductOptionId");

                    b.HasIndex("ProductRefId");

                    b.ToTable("TblProductOptions");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblProductReview", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("ProductRefId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("PublishAt")
                        .HasColumnType("datetime2");

                    b.Property<short>("RatingValue")
                        .HasColumnType("smallint");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("UpdatedTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<long>("UserRefId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductRefId");

                    b.HasIndex("UserRefId");

                    b.ToTable("TblProductReviews");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblProductReviewImage", b =>
                {
                    b.Property<long>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("ReviewRefId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("UpdatedTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageId");

                    b.HasIndex("ReviewRefId");

                    b.ToTable("TblProductReviewImages");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("UpdatedTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("RoleId");

                    b.ToTable("TblRoles");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblSubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductCategoryRefId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryRefId");

                    b.ToTable("TblSubCategories");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblUser", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<byte[]>("UpdatedTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("TblUsers");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblUserAddress", b =>
                {
                    b.Property<long>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Landmark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pincode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("UpdatedTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<long>("UserRefId")
                        .HasColumnType("bigint");

                    b.HasKey("AddressId");

                    b.HasIndex("UserRefId");

                    b.ToTable("TblUserAddresses");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblUserPaymentMethod", b =>
                {
                    b.Property<int>("UserPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CardHolderName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CardNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CvvNo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ExpireMonth")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExpireYear")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<byte[]>("UpdatedTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("UserPaymentMethodRefCode")
                        .HasColumnType("int");

                    b.Property<long>("UserRefId")
                        .HasColumnType("bigint");

                    b.HasKey("UserPaymentId");

                    b.HasIndex("UserPaymentMethodRefCode");

                    b.HasIndex("UserRefId");

                    b.ToTable("TblUserPaymentMethods");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblUserPaymentMethodsCode", b =>
                {
                    b.Property<int>("PaymentMethodCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PaymentMethodCodeDesc")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte[]>("UpdatedTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("PaymentMethodCode");

                    b.ToTable("TblUserPaymentMethodsCodes");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblUserShoppingCart", b =>
                {
                    b.Property<long>("ShoppingCartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<byte[]>("UpdatedTime")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<long>("UserRefId")
                        .HasColumnType("bigint");

                    b.HasKey("ShoppingCartID");

                    b.HasIndex("UserRefId");

                    b.ToTable("TblUserShoppingCarts");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblCartItem", b =>
                {
                    b.HasOne("urfurniture.DAL.Entities.TblProduct", "TblProduct")
                        .WithMany("TblCartItems")
                        .HasForeignKey("ProductRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("urfurniture.DAL.Entities.TblUserShoppingCart", "TblUserShoppingCart")
                        .WithMany("TblCartItems")
                        .HasForeignKey("UserShoppingCartRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblProduct");

                    b.Navigation("TblUserShoppingCart");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblCategoryImage", b =>
                {
                    b.HasOne("urfurniture.DAL.Entities.TblProductCategory", "TblProductCategory")
                        .WithMany("TblCategoryImage")
                        .HasForeignKey("CategoryRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblProductCategory");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblOrder", b =>
                {
                    b.HasOne("urfurniture.DAL.Entities.TblUser", "TblUser")
                        .WithMany("TblOrders")
                        .HasForeignKey("UserRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblUser");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblOrderItemDetails", b =>
                {
                    b.HasOne("urfurniture.DAL.Entities.TblOrder", "TblOrder")
                        .WithMany("TblOrderItemDetails")
                        .HasForeignKey("OrderRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("urfurniture.DAL.Entities.TblOrderStatusCode", "TblOrderStatusCodes")
                        .WithMany("TblOrder")
                        .HasForeignKey("OrderStatusRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("urfurniture.DAL.Entities.TblProduct", "TblProduct")
                        .WithMany("TblOrderDetails")
                        .HasForeignKey("ProductRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblOrder");

                    b.Navigation("TblOrderStatusCodes");

                    b.Navigation("TblProduct");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblProduct", b =>
                {
                    b.HasOne("urfurniture.DAL.Entities.TblSubCategory", "TblSubCategory")
                        .WithMany("TblProducts")
                        .HasForeignKey("ProdctSubCategoryRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblSubCategory");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblProductImage", b =>
                {
                    b.HasOne("urfurniture.DAL.Entities.TblProduct", "TblProduct")
                        .WithMany("TblProductImage")
                        .HasForeignKey("ProductRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblProduct");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblProductMetadata", b =>
                {
                    b.HasOne("urfurniture.DAL.Entities.TblProduct", "TblProduct")
                        .WithMany("TblProductMetadatas")
                        .HasForeignKey("ProductRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblProduct");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblProductOption", b =>
                {
                    b.HasOne("urfurniture.DAL.Entities.TblProduct", "TblProduct")
                        .WithMany("TblProductOption")
                        .HasForeignKey("ProductRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblProduct");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblProductReview", b =>
                {
                    b.HasOne("urfurniture.DAL.Entities.TblProduct", "TblProduct")
                        .WithMany("TblProductReviews")
                        .HasForeignKey("ProductRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("urfurniture.DAL.Entities.TblUser", "TblUser")
                        .WithMany("TblProductReviews")
                        .HasForeignKey("UserRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblProduct");

                    b.Navigation("TblUser");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblProductReviewImage", b =>
                {
                    b.HasOne("urfurniture.DAL.Entities.TblProductReview", "TblProductReview")
                        .WithMany("TblProductReviewImages")
                        .HasForeignKey("ReviewRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblProductReview");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblSubCategory", b =>
                {
                    b.HasOne("urfurniture.DAL.Entities.TblProductCategory", "TblProductCategory")
                        .WithMany("TblSubCategory")
                        .HasForeignKey("ProductCategoryRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblProductCategory");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblUser", b =>
                {
                    b.HasOne("urfurniture.DAL.Entities.TblRole", "TblRole")
                        .WithMany("TblUsers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblRole");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblUserAddress", b =>
                {
                    b.HasOne("urfurniture.DAL.Entities.TblUser", "TblUser")
                        .WithMany("TblUserAddresses")
                        .HasForeignKey("UserRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblUser");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblUserPaymentMethod", b =>
                {
                    b.HasOne("urfurniture.DAL.Entities.TblUserPaymentMethodsCode", "TblUserPaymentMethodsCode")
                        .WithMany("TblUserPaymentMethods")
                        .HasForeignKey("UserPaymentMethodRefCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("urfurniture.DAL.Entities.TblUser", "TblUser")
                        .WithMany()
                        .HasForeignKey("UserRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblUser");

                    b.Navigation("TblUserPaymentMethodsCode");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblUserShoppingCart", b =>
                {
                    b.HasOne("urfurniture.DAL.Entities.TblUser", "TblUser")
                        .WithMany("TblUserShoppingCarts")
                        .HasForeignKey("UserRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblUser");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblOrder", b =>
                {
                    b.Navigation("TblOrderItemDetails");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblOrderStatusCode", b =>
                {
                    b.Navigation("TblOrder");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblProduct", b =>
                {
                    b.Navigation("TblCartItems");

                    b.Navigation("TblOrderDetails");

                    b.Navigation("TblProductImage");

                    b.Navigation("TblProductMetadatas");

                    b.Navigation("TblProductOption");

                    b.Navigation("TblProductReviews");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblProductCategory", b =>
                {
                    b.Navigation("TblCategoryImage");

                    b.Navigation("TblSubCategory");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblProductReview", b =>
                {
                    b.Navigation("TblProductReviewImages");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblRole", b =>
                {
                    b.Navigation("TblUsers");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblSubCategory", b =>
                {
                    b.Navigation("TblProducts");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblUser", b =>
                {
                    b.Navigation("TblOrders");

                    b.Navigation("TblProductReviews");

                    b.Navigation("TblUserAddresses");

                    b.Navigation("TblUserShoppingCarts");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblUserPaymentMethodsCode", b =>
                {
                    b.Navigation("TblUserPaymentMethods");
                });

            modelBuilder.Entity("urfurniture.DAL.Entities.TblUserShoppingCart", b =>
                {
                    b.Navigation("TblCartItems");
                });
#pragma warning restore 612, 618
        }
    }
}
